(function() {
var templates = {};
templates["edit.nj.html"] = (function() {
function root(env, context, frame, runtime) {
var lineno = null;
var colno = null;
var output = "";
try {
output += "<form method=\"POST\" class=\"form-horizontal\" action=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "url"), env.autoesc);
output += "\">\n    ";
frame = frame.push();
var t_2 = runtime.contextOrFrameLookup(context, frame, "form");
if(t_2) {for(var t_1=0; t_1 < t_2.length; t_1++) {
var t_3 = t_2[t_1];
frame.set("field", t_3);
output += "\n        ";
if(runtime.memberLookup((t_3),"editable", env.autoesc) || runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "user")),"is_admin", env.autoesc)) {
output += "\n            <div class=\"control-group\">\n\n                <label class=\"control-label\">";
output += runtime.suppressValue(runtime.memberLookup((t_3),"label", env.autoesc), env.autoesc);
output += ":</label>\n                <div class=\"controls\">\n\n                    ";
if(runtime.memberLookup((t_3),"type", env.autoesc) == "textarea") {
output += "\n\n                        <textarea name=\"";
output += runtime.suppressValue(runtime.memberLookup((t_3),"name", env.autoesc), env.autoesc);
output += "\">\n                            ";
output += runtime.suppressValue(runtime.memberLookup((t_3),"value", env.autoesc), env.autoesc);
output += "\n                        </textarea>\n\n                    ";
}
else {
output += "\n\n                        <input\n                            type=\"";
output += runtime.suppressValue(runtime.memberLookup((t_3),"type", env.autoesc), env.autoesc);
output += "\"\n                            name=\"";
output += runtime.suppressValue(runtime.memberLookup((t_3),"name", env.autoesc), env.autoesc);
output += "\"\n                            ";
if(runtime.memberLookup((t_3),"type", env.autoesc) == "checkbox") {
output += "\n                                ";
if(runtime.memberLookup((t_3),"value", env.autoesc)) {
output += "checked";
}
output += "\n                            ";
}
else {
output += "\n                                value=\"";
output += runtime.suppressValue(runtime.memberLookup((t_3),"value", env.autoesc), env.autoesc);
output += "\"\n                            ";
}
output += "\n                        >\n\n                    ";
}
output += "\n\n                </div>\n            </div>\n        ";
}
output += "\n    ";
}
}frame = frame.pop();
output += "\n\n    <div class=\"control-group\">\n        <div class=\"controls\">\n            <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n        </div>\n    </div>\n\n</form>";
return output;
} catch (e) {
  runtime.handleError(e, lineno, colno);
}
}
return {
root: root
};

})();
templates["entryList.nj.html"] = (function() {
function root(env, context, frame, runtime) {
var lineno = null;
var colno = null;
var output = "";
try {
output += "<ul class=\"unstyled entries\">\n    ";
frame = frame.push();
var t_2 = runtime.contextOrFrameLookup(context, frame, "entry_list");
if(t_2) {for(var t_1=0; t_1 < t_2.length; t_1++) {
var t_3 = t_2[t_1];
frame.set("entry", t_3);
output += "\n        <li class=\"unstyled\">\n            <blockquote>\n                <header>\n                    <div class=\"author\">\n                        ";
if(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "user")),"is_admin", env.autoesc)) {
output += "<a href=\"#user/";
output += runtime.suppressValue(runtime.memberLookup((runtime.memberLookup((t_3),"author", env.autoesc)),"id", env.autoesc), env.autoesc);
output += "\">";
}
output += "\n                            ";
output += runtime.suppressValue(runtime.memberLookup((runtime.memberLookup((t_3),"author", env.autoesc)),"name", env.autoesc), env.autoesc);
output += "\n                        ";
if(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "user")),"is_admin", env.autoesc)) {
output += "</a>";
}
output += "\n                    </div>\n                    <div class=\"title\"><strong>";
output += runtime.suppressValue(runtime.memberLookup((t_3),"name", env.autoesc), env.autoesc);
output += "</strong></div>\n                    <div class=\"time muted\"><em>";
output += runtime.suppressValue(runtime.memberLookup((t_3),"created", env.autoesc), env.autoesc);
output += "</em></div>\n                </header>\n\n                <section>\n                    ";
output += runtime.suppressValue(runtime.memberLookup((t_3),"text", env.autoesc), env.autoesc);
output += "\n                </section>\n\n                ";
if(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "user")),"is_admin", env.autoesc)) {
output += "\n                    <footer>\n                        <ul>\n\n                            <li>\n                                ";
if(runtime.memberLookup((t_3),"is_active", env.autoesc) == 0) {
output += "\n                                    <div class=\"notice\">HIDDEN</div>\n                                ";
}
output += "\n                                <a href=\"#msg/";
output += runtime.suppressValue(runtime.memberLookup((t_3),"id", env.autoesc), env.autoesc);
output += "\">edit</a>\n                            </li>\n\n                            <li>\n                                <a href=\"#msg/";
output += runtime.suppressValue(runtime.memberLookup((t_3),"id", env.autoesc), env.autoesc);
output += "/delete\">delete</a>\n                            </li>\n\n                        </ul>\n                    </footer>\n                ";
}
output += "\n\n            </blockquote>\n        </li>\n    ";
}
}frame = frame.pop();
output += "\n</ul>\n";
return output;
} catch (e) {
  runtime.handleError(e, lineno, colno);
}
}
return {
root: root
};

})();
templates["login.nj.html"] = (function() {
function root(env, context, frame, runtime) {
var lineno = null;
var colno = null;
var output = "";
try {
output += "<form method=\"POST\" action=\"./?action=user_login\" class=\"form-horizontal\">\n\n    <div class=\"control-group\">\n        <label class=\"control-label\">Username:</label>\n        <div class=\"controls\">\n            <input type=\"text\" name=\"user_name\" value=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "user_name"), env.autoesc);
output += "\">\n        </div>\n    </div>\n\n    <div class=\"control-group\">\n        <label class=\"control-label\">Password:</label>\n        <div class=\"controls\">\n            <input type=\"password\" name=\"pass\">\n        </div>\n    </div>\n\n    <div class=\"control-group\">\n        <div class=\"controls\">\n            <button type=\"submit\" class=\"btn btn-primary\">Sign in</button>\n        </div>\n    </div>\n\n</form>\n";
return output;
} catch (e) {
  runtime.handleError(e, lineno, colno);
}
}
return {
root: root
};

})();
templates["userCreate.nj.html"] = (function() {
function root(env, context, frame, runtime) {
var lineno = null;
var colno = null;
var output = "";
try {
output += "<form method=\"POST\" action=\"./?action=user_new\" class=\"form-horizontal\">\n    <div class=\"control-group\">\n        <label class=\"control-label\">Username*:</label>\n        <div class=\"controls\">\n            <input type=\"text\" name=\"user_name\" value=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "user_name"), env.autoesc);
output += "\">\n        </div>\n    </div>\n    <div class=\"control-group\">\n        <label class=\"control-label\">Password*:</label>\n        <div class=\"controls\">\n            <input type=\"password\" name=\"pass\">\n        </div>\n    </div>\n    <div class=\"control-group\">\n        <label class=\"control-label\">Confirm password*:</label>\n        <div class=\"controls\">\n            <input type=\"password\" name=\"pass_confirm\">\n        </div>\n    </div>\n    <div class=\"control-group\">\n        <div class=\"controls\">\n            <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n        </div>\n    </div>\n</form>";
return output;
} catch (e) {
  runtime.handleError(e, lineno, colno);
}
}
return {
root: root
};

})();
if(typeof define === "function" && define.amd) {
    define(["nunjucks"], function(nunjucks) {
        nunjucks.env = new nunjucks.Environment([], null);
        nunjucks.env.registerPrecompiled(templates);
        return nunjucks;
    });
}
else if(typeof nunjucks === "object") {
    nunjucks.env = new nunjucks.Environment([], null);
    nunjucks.env.registerPrecompiled(templates);
}
else {
    console.error("ERROR: You must load nunjucks before the precompiled templates");
}
})();
